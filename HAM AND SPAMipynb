{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOsjSeEUOTClRxzkKYGgjDO"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"IbTBRmrv_YWA"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import os\n","import seaborn as sns"]},{"cell_type":"code","source":["df=pd.read_csv('mail_data.csv')"],"metadata":{"id":"nImidbTY_lOD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"DRA4SdnR_voU","executionInfo":{"status":"ok","timestamp":1707062503667,"user_tz":480,"elapsed":11,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"55d5b633-643c-434f-d0bf-7158b77754ad"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Category                                            Message\n","0      ham  Go until jurong point, crazy.. Available only ...\n","1      ham                      Ok lar... Joking wif u oni...\n","2     spam  Free entry in 2 a wkly comp to win FA Cup fina...\n","3      ham  U dun say so early hor... U c already then say...\n","4      ham  Nah I don't think he goes to usf, he lives aro..."],"text/html":["\n","  <div id=\"df-ec33981d-08a5-4964-81ec-787073f9699d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Message</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ham</td>\n","      <td>Go until jurong point, crazy.. Available only ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ham</td>\n","      <td>Ok lar... Joking wif u oni...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>spam</td>\n","      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ham</td>\n","      <td>U dun say so early hor... U c already then say...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ham</td>\n","      <td>Nah I don't think he goes to usf, he lives aro...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ec33981d-08a5-4964-81ec-787073f9699d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ec33981d-08a5-4964-81ec-787073f9699d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ec33981d-08a5-4964-81ec-787073f9699d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-03525ef0-d373-43e7-a665-82a342a83eb6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-03525ef0-d373-43e7-a665-82a342a83eb6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-03525ef0-d373-43e7-a665-82a342a83eb6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":309}]},{"cell_type":"code","source":["df.shape\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vh6rKXREACxD","executionInfo":{"status":"ok","timestamp":1707062505760,"user_tz":480,"elapsed":11,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"3adcdbf0-9e4f-4225-c51c-46124f864dbf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5572, 2)"]},"metadata":{},"execution_count":310}]},{"cell_type":"code","source":["df.info()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ql19lx_pAMAE","executionInfo":{"status":"ok","timestamp":1707062506903,"user_tz":480,"elapsed":16,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"8336a618-fe4c-42c0-ad51-a19ecd85ab9f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 5572 entries, 0 to 5571\n","Data columns (total 2 columns):\n"," #   Column    Non-Null Count  Dtype \n","---  ------    --------------  ----- \n"," 0   Category  5572 non-null   object\n"," 1   Message   5572 non-null   object\n","dtypes: object(2)\n","memory usage: 87.2+ KB\n"]}]},{"cell_type":"code","source":["# data cleaning\n","# missing or null value\n","df1=df.where((pd.notnull(df)),'')"],"metadata":{"id":"jf050wQiAcib"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"3seCxorqD9hi","executionInfo":{"status":"ok","timestamp":1707062510521,"user_tz":480,"elapsed":6,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"543b8bca-0274-4eea-be37-e64009389ca2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Category                                            Message\n","0      ham  Go until jurong point, crazy.. Available only ...\n","1      ham                      Ok lar... Joking wif u oni...\n","2     spam  Free entry in 2 a wkly comp to win FA Cup fina...\n","3      ham  U dun say so early hor... U c already then say...\n","4      ham  Nah I don't think he goes to usf, he lives aro..."],"text/html":["\n","  <div id=\"df-c43cd19a-22bc-4068-873b-0612e0176b4f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Message</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ham</td>\n","      <td>Go until jurong point, crazy.. Available only ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ham</td>\n","      <td>Ok lar... Joking wif u oni...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>spam</td>\n","      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ham</td>\n","      <td>U dun say so early hor... U c already then say...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ham</td>\n","      <td>Nah I don't think he goes to usf, he lives aro...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c43cd19a-22bc-4068-873b-0612e0176b4f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c43cd19a-22bc-4068-873b-0612e0176b4f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c43cd19a-22bc-4068-873b-0612e0176b4f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3220d03c-aa36-4049-bad4-209d703c978d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3220d03c-aa36-4049-bad4-209d703c978d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3220d03c-aa36-4049-bad4-209d703c978d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":313}]},{"cell_type":"code","source":["df1.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"FvBbxHMbEZUY","executionInfo":{"status":"ok","timestamp":1707062512110,"user_tz":480,"elapsed":22,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"8aa917f3-42be-4e7e-cec9-68b624a69073"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Category                                            Message\n","0      ham  Go until jurong point, crazy.. Available only ...\n","1      ham                      Ok lar... Joking wif u oni...\n","2     spam  Free entry in 2 a wkly comp to win FA Cup fina...\n","3      ham  U dun say so early hor... U c already then say...\n","4      ham  Nah I don't think he goes to usf, he lives aro..."],"text/html":["\n","  <div id=\"df-130e1182-1384-4a83-842f-d0097727b3f6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Message</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ham</td>\n","      <td>Go until jurong point, crazy.. Available only ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ham</td>\n","      <td>Ok lar... Joking wif u oni...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>spam</td>\n","      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ham</td>\n","      <td>U dun say so early hor... U c already then say...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ham</td>\n","      <td>Nah I don't think he goes to usf, he lives aro...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-130e1182-1384-4a83-842f-d0097727b3f6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-130e1182-1384-4a83-842f-d0097727b3f6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-130e1182-1384-4a83-842f-d0097727b3f6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d8272d27-85f6-47c5-bd3f-b8076aa57b0a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d8272d27-85f6-47c5-bd3f-b8076aa57b0a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d8272d27-85f6-47c5-bd3f-b8076aa57b0a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":314}]},{"cell_type":"code","source":["#checking the number of rows and columns in data frame\n","df1.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CdAW2ntrEdjY","executionInfo":{"status":"ok","timestamp":1707062515284,"user_tz":480,"elapsed":11,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"81bbac1d-a74c-4b6f-c8f2-40760b1f80c0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5572, 2)"]},"metadata":{},"execution_count":315}]},{"cell_type":"code","source":["# rename the column\n","df1.rename(columns={'Category':'target','Message':'text'},inplace=True)"],"metadata":{"id":"VTVHM11mFUtw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#label encoding ham is 1 and spam 0\n","from sklearn.preprocessing import LabelEncoder\n","encoder=LabelEncoder"],"metadata":{"id":"e-ZqGGnUEqHh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df1.sample"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QzmOZkseGrSM","executionInfo":{"status":"ok","timestamp":1707062526158,"user_tz":480,"elapsed":1126,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"cffdf0af-8af1-429f-869a-16ab4e60a7cb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method NDFrame.sample of      target                                               text\n","0       ham  Go until jurong point, crazy.. Available only ...\n","1       ham                      Ok lar... Joking wif u oni...\n","2      spam  Free entry in 2 a wkly comp to win FA Cup fina...\n","3       ham  U dun say so early hor... U c already then say...\n","4       ham  Nah I don't think he goes to usf, he lives aro...\n","...     ...                                                ...\n","5567   spam  This is the 2nd time we have tried 2 contact u...\n","5568    ham               Will ü b going to esplanade fr home?\n","5569    ham  Pity, * was in mood for that. So...any other s...\n","5570    ham  The guy did some bitching but I acted like i'd...\n","5571    ham                         Rofl. Its true to its name\n","\n","[5572 rows x 2 columns]>"]},"metadata":{},"execution_count":318}]},{"cell_type":"code","source":["df1.loc[df1['target']=='spam',' target',]=0\n","df1.loc[df1['target']=='ham',' target',]=1\n"],"metadata":{"id":"u6lTZIKwGwPX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df1.sample"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jFciDjscG5g3","executionInfo":{"status":"ok","timestamp":1707062529798,"user_tz":480,"elapsed":3,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"9280ea54-9e72-40b1-c188-35743af1e640"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method NDFrame.sample of      target                                               text   target\n","0       ham  Go until jurong point, crazy.. Available only ...      1.0\n","1       ham                      Ok lar... Joking wif u oni...      1.0\n","2      spam  Free entry in 2 a wkly comp to win FA Cup fina...      0.0\n","3       ham  U dun say so early hor... U c already then say...      1.0\n","4       ham  Nah I don't think he goes to usf, he lives aro...      1.0\n","...     ...                                                ...      ...\n","5567   spam  This is the 2nd time we have tried 2 contact u...      0.0\n","5568    ham               Will ü b going to esplanade fr home?      1.0\n","5569    ham  Pity, * was in mood for that. So...any other s...      1.0\n","5570    ham  The guy did some bitching but I acted like i'd...      1.0\n","5571    ham                         Rofl. Its true to its name      1.0\n","\n","[5572 rows x 3 columns]>"]},"metadata":{},"execution_count":320}]},{"cell_type":"code","source":["#Two thing we should check\n","#missing value\n","#Check for the duplicates\n","\n","#missing value\n","df1.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oVXk6mxHIRIT","executionInfo":{"status":"ok","timestamp":1707062533439,"user_tz":480,"elapsed":479,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"c4bb55f2-ac1a-4c45-e3b5-7ea1f07c13f0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["target     0\n","text       0\n"," target    0\n","dtype: int64"]},"metadata":{},"execution_count":321}]},{"cell_type":"code","source":["#Check the duplicates\n","df1.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w-F2eUeIJErn","executionInfo":{"status":"ok","timestamp":1707062538364,"user_tz":480,"elapsed":11,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"4c8a6c66-39ca-4667-a46e-59bc974ac61f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["415"]},"metadata":{},"execution_count":322}]},{"cell_type":"code","source":["# IF duplicates found remove it\n","df1=df1.drop_duplicates(keep = 'first')"],"metadata":{"id":"qh4ZWtO1JO77"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Recheck the duplicates\n","df.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0O7eOPl5JVbv","executionInfo":{"status":"ok","timestamp":1707062545159,"user_tz":480,"elapsed":452,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"09adeb96-f62b-4893-fa23-7fb8e4c96560"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["415"]},"metadata":{},"execution_count":325}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"grFKqgccJV25","executionInfo":{"status":"ok","timestamp":1707062547157,"user_tz":480,"elapsed":6,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"eb93b91b-cfe0-4b2c-c7d3-cf2d8a57a581"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5572, 2)"]},"metadata":{},"execution_count":326}]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","encoder = LabelEncoder()\n"],"metadata":{"id":"2VnGOSvUwyUK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df1['target'] = encoder.fit_transform(df1['target'])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AwXM1Ukf2RYh","executionInfo":{"status":"ok","timestamp":1707062553124,"user_tz":480,"elapsed":20,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"2be765cf-7c24-4e0a-86ef-7ee0bf59d23d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-328-34e3e5233658>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df1['target'] = encoder.fit_transform(df1['target'])\n"]}]},{"cell_type":"code","source":["# STEP 2 (EDA = Exploratory Data Analysis)\n","df.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"FqNEcZoRJfqM","executionInfo":{"status":"ok","timestamp":1707062559145,"user_tz":480,"elapsed":577,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"441246dc-bd12-42e0-a1ef-65e909581e41"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Category                                            Message\n","0      ham  Go until jurong point, crazy.. Available only ...\n","1      ham                      Ok lar... Joking wif u oni...\n","2     spam  Free entry in 2 a wkly comp to win FA Cup fina...\n","3      ham  U dun say so early hor... U c already then say...\n","4      ham  Nah I don't think he goes to usf, he lives aro..."],"text/html":["\n","  <div id=\"df-bad6a19b-048e-4558-a9a8-a9d5397cc16a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Message</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ham</td>\n","      <td>Go until jurong point, crazy.. Available only ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ham</td>\n","      <td>Ok lar... Joking wif u oni...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>spam</td>\n","      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ham</td>\n","      <td>U dun say so early hor... U c already then say...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ham</td>\n","      <td>Nah I don't think he goes to usf, he lives aro...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bad6a19b-048e-4558-a9a8-a9d5397cc16a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bad6a19b-048e-4558-a9a8-a9d5397cc16a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bad6a19b-048e-4558-a9a8-a9d5397cc16a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-be2ae275-d223-4906-a8cf-b672792f0c4f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-be2ae275-d223-4906-a8cf-b672792f0c4f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-be2ae275-d223-4906-a8cf-b672792f0c4f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":329}]},{"cell_type":"code","source":["df1['target'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hp0ILmxiJiy9","executionInfo":{"status":"ok","timestamp":1707062569335,"user_tz":480,"elapsed":23,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"2bb0bd9f-8e95-4ad9-8c18-a69774b9ae5c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    4516\n","1     641\n","Name: target, dtype: int64"]},"metadata":{},"execution_count":330}]},{"cell_type":"code","source":["plt.pie(df1['target'].value_counts(),labels=['ham','spam'],autopct=\"%0.2f\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":406},"id":"M8ZTZtYDJl6X","executionInfo":{"status":"ok","timestamp":1707062575481,"user_tz":480,"elapsed":1342,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"b92eed1e-4ad8-448e-987d-672f25b98e42"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#LOOKING At This we can say that the data is immbalance\n","!pip install nltk"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1bHWyCF3Jx5i","executionInfo":{"status":"ok","timestamp":1707062586876,"user_tz":480,"elapsed":6188,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"6e63f2c7-1b2f-4543-899c-4790b1f86ebb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: nltk in /usr/local/lib/python3.10/dist-packages (3.8.1)\n","Requirement already satisfied: click in /usr/local/lib/python3.10/dist-packages (from nltk) (8.1.7)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.10/dist-packages (from nltk) (1.3.2)\n","Requirement already satisfied: regex>=2021.8.3 in /usr/local/lib/python3.10/dist-packages (from nltk) (2023.12.25)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from nltk) (4.66.1)\n"]}]},{"cell_type":"code","source":["import nltk"],"metadata":{"id":"cmyKY4DgJyxW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["nltk.download('punkt')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1yuRDUDmJ13h","executionInfo":{"status":"ok","timestamp":1707062591185,"user_tz":480,"elapsed":1259,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"43bb75f9-66be-4d08-d3ca-87b29c9bfa8b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":334}]},{"cell_type":"code","source":["#count the no of text in ham and spam\n","df1['text']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_Bt3w-YXJ6ZW","executionInfo":{"status":"ok","timestamp":1707062595261,"user_tz":480,"elapsed":25,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"4ee1f598-a3bc-4036-b0ae-a64e29465d23"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       Go until jurong point, crazy.. Available only ...\n","1                           Ok lar... Joking wif u oni...\n","2       Free entry in 2 a wkly comp to win FA Cup fina...\n","3       U dun say so early hor... U c already then say...\n","4       Nah I don't think he goes to usf, he lives aro...\n","                              ...                        \n","5567    This is the 2nd time we have tried 2 contact u...\n","5568                 Will ü b going to esplanade fr home?\n","5569    Pity, * was in mood for that. So...any other s...\n","5570    The guy did some bitching but I acted like i'd...\n","5571                           Rofl. Its true to its name\n","Name: text, Length: 5157, dtype: object"]},"metadata":{},"execution_count":335}]},{"cell_type":"code","source":["df1['num_characters']=df1['text'].apply(len)"],"metadata":{"id":"-XWmtWtiJ-qB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1707062651633,"user_tz":480,"elapsed":643,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"d16c2793-763a-4a39-c115-7e281f8c7c1f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-344-4c7c01068961>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df1['num_characters']=df1['text'].apply(len)\n"]}]},{"cell_type":"code","source":["df1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"xCQQTGzEKERE","executionInfo":{"status":"ok","timestamp":1707062602283,"user_tz":480,"elapsed":545,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"cc76092f-ca68-4745-b725-ddbd3048e0ab"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   target                                               text   target\n","0       0  Go until jurong point, crazy.. Available only ...      1.0\n","1       0                      Ok lar... Joking wif u oni...      1.0\n","2       1  Free entry in 2 a wkly comp to win FA Cup fina...      0.0\n","3       0  U dun say so early hor... U c already then say...      1.0\n","4       0  Nah I don't think he goes to usf, he lives aro...      1.0"],"text/html":["\n","  <div id=\"df-1a357983-0d4b-441d-824f-13a1d958e9b7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>target</th>\n","      <th>text</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Go until jurong point, crazy.. Available only ...</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>Ok lar... Joking wif u oni...</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>U dun say so early hor... U c already then say...</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>Nah I don't think he goes to usf, he lives aro...</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1a357983-0d4b-441d-824f-13a1d958e9b7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1a357983-0d4b-441d-824f-13a1d958e9b7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1a357983-0d4b-441d-824f-13a1d958e9b7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-909c82f7-efa7-4fb3-aeb7-48e1428b203a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-909c82f7-efa7-4fb3-aeb7-48e1428b203a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-909c82f7-efa7-4fb3-aeb7-48e1428b203a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":336}]},{"cell_type":"code","source":["#fetch the no of words\n","df1['text'].apply(lambda x:nltk.word_tokenize(x))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JjinPvLyKGvl","executionInfo":{"status":"ok","timestamp":1707062607848,"user_tz":480,"elapsed":2887,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"50fc795f-a899-4071-d742-1460c208a8ee"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       [Go, until, jurong, point, ,, crazy, .., Avail...\n","1                [Ok, lar, ..., Joking, wif, u, oni, ...]\n","2       [Free, entry, in, 2, a, wkly, comp, to, win, F...\n","3       [U, dun, say, so, early, hor, ..., U, c, alrea...\n","4       [Nah, I, do, n't, think, he, goes, to, usf, ,,...\n","                              ...                        \n","5567    [This, is, the, 2nd, time, we, have, tried, 2,...\n","5568      [Will, ü, b, going, to, esplanade, fr, home, ?]\n","5569    [Pity, ,, *, was, in, mood, for, that, ., So, ...\n","5570    [The, guy, did, some, bitching, but, I, acted,...\n","5571                  [Rofl, ., Its, true, to, its, name]\n","Name: text, Length: 5157, dtype: object"]},"metadata":{},"execution_count":337}]},{"cell_type":"code","source":["#just need to count\n","df1['num_words']=df1['text'].apply(lambda x:len(nltk.word_tokenize(x)))"],"metadata":{"id":"GiIMmZTfKM1p","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1707062612639,"user_tz":480,"elapsed":2988,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"7ce2e32d-702a-476e-f731-0168c49138bd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-338-d2765a8ae4dc>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df1['num_words']=df1['text'].apply(lambda x:len(nltk.word_tokenize(x)))\n"]}]},{"cell_type":"code","source":["df1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"j0XvlVFXKWwh","executionInfo":{"status":"ok","timestamp":1707062616151,"user_tz":480,"elapsed":527,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"5fd5cc87-8b18-4900-932d-c2e25c0b0a19"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   target                                               text   target  \\\n","0       0  Go until jurong point, crazy.. Available only ...      1.0   \n","1       0                      Ok lar... Joking wif u oni...      1.0   \n","2       1  Free entry in 2 a wkly comp to win FA Cup fina...      0.0   \n","3       0  U dun say so early hor... U c already then say...      1.0   \n","4       0  Nah I don't think he goes to usf, he lives aro...      1.0   \n","\n","   num_words  \n","0         24  \n","1          8  \n","2         37  \n","3         13  \n","4         15  "],"text/html":["\n","  <div id=\"df-b2d7dc7f-b52e-4ec1-bd3c-6e4b7703bdfa\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>target</th>\n","      <th>text</th>\n","      <th>target</th>\n","      <th>num_words</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Go until jurong point, crazy.. Available only ...</td>\n","      <td>1.0</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>Ok lar... Joking wif u oni...</td>\n","      <td>1.0</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n","      <td>0.0</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>U dun say so early hor... U c already then say...</td>\n","      <td>1.0</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>Nah I don't think he goes to usf, he lives aro...</td>\n","      <td>1.0</td>\n","      <td>15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b2d7dc7f-b52e-4ec1-bd3c-6e4b7703bdfa')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b2d7dc7f-b52e-4ec1-bd3c-6e4b7703bdfa button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b2d7dc7f-b52e-4ec1-bd3c-6e4b7703bdfa');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1c694b31-bec2-4b4b-b798-ffb494e7eae8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1c694b31-bec2-4b4b-b798-ffb494e7eae8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1c694b31-bec2-4b4b-b798-ffb494e7eae8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":339}]},{"cell_type":"code","source":["df1['num_sentences']=df1['text'].apply(lambda x:len(nltk.sent_tokenize(x)))"],"metadata":{"id":"TGYf_GB0Ka1T","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1707062619803,"user_tz":480,"elapsed":14,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"cf78d9a7-1fe8-4e4f-92d1-63f00da4b9e6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-340-3477a1621e15>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df1['num_sentences']=df1['text'].apply(lambda x:len(nltk.sent_tokenize(x)))\n"]}]},{"cell_type":"code","source":["df1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"zjS_PnbMKi0L","executionInfo":{"status":"ok","timestamp":1707062623481,"user_tz":480,"elapsed":10,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"f2caf0e5-6c66-44c0-8e53-7aede5acac67"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   target                                               text   target  \\\n","0       0  Go until jurong point, crazy.. Available only ...      1.0   \n","1       0                      Ok lar... Joking wif u oni...      1.0   \n","2       1  Free entry in 2 a wkly comp to win FA Cup fina...      0.0   \n","3       0  U dun say so early hor... U c already then say...      1.0   \n","4       0  Nah I don't think he goes to usf, he lives aro...      1.0   \n","\n","   num_words  num_sentences  \n","0         24              2  \n","1          8              2  \n","2         37              2  \n","3         13              1  \n","4         15              1  "],"text/html":["\n","  <div id=\"df-16b4317c-f6f6-4a6e-a98d-d13c62a82f58\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>target</th>\n","      <th>text</th>\n","      <th>target</th>\n","      <th>num_words</th>\n","      <th>num_sentences</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Go until jurong point, crazy.. Available only ...</td>\n","      <td>1.0</td>\n","      <td>24</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>Ok lar... Joking wif u oni...</td>\n","      <td>1.0</td>\n","      <td>8</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n","      <td>0.0</td>\n","      <td>37</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>U dun say so early hor... U c already then say...</td>\n","      <td>1.0</td>\n","      <td>13</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>Nah I don't think he goes to usf, he lives aro...</td>\n","      <td>1.0</td>\n","      <td>15</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-16b4317c-f6f6-4a6e-a98d-d13c62a82f58')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-16b4317c-f6f6-4a6e-a98d-d13c62a82f58 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-16b4317c-f6f6-4a6e-a98d-d13c62a82f58');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-92127fb6-2579-418d-93dd-cad1141dbcb9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-92127fb6-2579-418d-93dd-cad1141dbcb9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-92127fb6-2579-418d-93dd-cad1141dbcb9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":341}]},{"cell_type":"code","source":["#lets divide HAM AND SPAM\n","#HAM\n","df1[df1['target']==0][['num_characters','num_words','num_sentences']].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"XSXNKLdGKrRk","executionInfo":{"status":"ok","timestamp":1707062656687,"user_tz":480,"elapsed":650,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"79426075-38d7-47e4-ae7d-5277b8c579ef"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       num_characters    num_words  num_sentences\n","count     4516.000000  4516.000000    4516.000000\n","mean        70.869353    17.267715       1.827724\n","std         56.708301    13.588065       1.394338\n","min          2.000000     1.000000       1.000000\n","25%         34.000000     8.000000       1.000000\n","50%         53.000000    13.000000       1.000000\n","75%         91.000000    22.000000       2.000000\n","max        910.000000   220.000000      38.000000"],"text/html":["\n","  <div id=\"df-39d33fae-7cba-4bb1-9fcb-a28a93f959be\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>num_characters</th>\n","      <th>num_words</th>\n","      <th>num_sentences</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>4516.000000</td>\n","      <td>4516.000000</td>\n","      <td>4516.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>70.869353</td>\n","      <td>17.267715</td>\n","      <td>1.827724</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>56.708301</td>\n","      <td>13.588065</td>\n","      <td>1.394338</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>34.000000</td>\n","      <td>8.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>53.000000</td>\n","      <td>13.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>91.000000</td>\n","      <td>22.000000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>910.000000</td>\n","      <td>220.000000</td>\n","      <td>38.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-39d33fae-7cba-4bb1-9fcb-a28a93f959be')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-39d33fae-7cba-4bb1-9fcb-a28a93f959be button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-39d33fae-7cba-4bb1-9fcb-a28a93f959be');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cae46154-66c5-4f2c-a9a2-8626e4c86cb6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cae46154-66c5-4f2c-a9a2-8626e4c86cb6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cae46154-66c5-4f2c-a9a2-8626e4c86cb6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":345}]},{"cell_type":"markdown","source":[],"metadata":{"id":"Y3Z1hZN-Kwl8"}},{"cell_type":"code","source":["#spam\n","df1[df1['target']==1][['num_characters','num_words','num_sentences']].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"WoYfm7UbKwir","executionInfo":{"status":"ok","timestamp":1707062664037,"user_tz":480,"elapsed":1350,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"0ae96c5f-b476-4433-9b74-46ffc6d2bafc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       num_characters   num_words  num_sentences\n","count      641.000000  641.000000     641.000000\n","mean       137.118565   27.667707       2.970359\n","std         30.399707    7.103501       1.485575\n","min          7.000000    2.000000       1.000000\n","25%        130.000000   25.000000       2.000000\n","50%        148.000000   29.000000       3.000000\n","75%        157.000000   32.000000       4.000000\n","max        223.000000   46.000000       9.000000"],"text/html":["\n","  <div id=\"df-e1339395-e6e8-4ba6-b22b-e8b776a7c0f2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>num_characters</th>\n","      <th>num_words</th>\n","      <th>num_sentences</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>641.000000</td>\n","      <td>641.000000</td>\n","      <td>641.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>137.118565</td>\n","      <td>27.667707</td>\n","      <td>2.970359</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>30.399707</td>\n","      <td>7.103501</td>\n","      <td>1.485575</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>7.000000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>130.000000</td>\n","      <td>25.000000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>148.000000</td>\n","      <td>29.000000</td>\n","      <td>3.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>157.000000</td>\n","      <td>32.000000</td>\n","      <td>4.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>223.000000</td>\n","      <td>46.000000</td>\n","      <td>9.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e1339395-e6e8-4ba6-b22b-e8b776a7c0f2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e1339395-e6e8-4ba6-b22b-e8b776a7c0f2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e1339395-e6e8-4ba6-b22b-e8b776a7c0f2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-577fb628-5d80-4d66-a473-dfb38df3f4f7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-577fb628-5d80-4d66-a473-dfb38df3f4f7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-577fb628-5d80-4d66-a473-dfb38df3f4f7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":346}]},{"cell_type":"code","source":["#LETS VISUALIZE THE DATA\n","\n","df1[df1['target']==0]['num_characters']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g2VT0akoK-3l","executionInfo":{"status":"ok","timestamp":1707062667540,"user_tz":480,"elapsed":12,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"2dbf699f-e15d-4d9f-ca5f-de09963ef9e6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       111\n","1        29\n","3        49\n","4        61\n","6        77\n","       ... \n","5565     12\n","5568     36\n","5569     57\n","5570    125\n","5571     26\n","Name: num_characters, Length: 4516, dtype: int64"]},"metadata":{},"execution_count":347}]},{"cell_type":"code","source":["import seaborn as sns"],"metadata":{"id":"tbt4MgbuMDVB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(12,12))\n","sns.histplot(df1[df1['target']==0]['num_characters'])\n","sns.histplot(df1[df1['target']==1]['num_characters'],color='red')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"AIq-LadHLFWB","executionInfo":{"status":"ok","timestamp":1707062673111,"user_tz":480,"elapsed":891,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"9ae2844b-7d72-48ce-f5ec-10a0693eaae3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='num_characters', ylabel='Count'>"]},"metadata":{},"execution_count":349},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x1200 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.figure(figsize=(6,4))\n","sns.histplot(df1[df1['target']==0]['num_words'])\n","sns.histplot(df1[df1['target']==1]['num_words'],color='red')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":405},"id":"G2rcUYDiLRXz","executionInfo":{"status":"ok","timestamp":1707062678540,"user_tz":480,"elapsed":749,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"5ca4b0e2-67b2-4297-fb78-e69cc8e0166a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='num_words', ylabel='Count'>"]},"metadata":{},"execution_count":350},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x400 with 1 Axes>"],"image/png":"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FwUAADqWZgWOH3/8US6X65z5VVVV+vnnny+5KAAA0LFc1HM4/vKXv5h/r1u3Tna73XztcrmUkZGhAQMGtFhxAACgY7iowDFlyhRJko+Pj2bOnOmxzN/fXwMGDNDLL7/cYsUBAICO4aICh9vtliTFxMRox44d6tWrlyVFAQCAjqVZjzYvKCho6ToAAEAH1uyxVDIyMpSRkaHi4mLzzEed995775ILAwAAHUezAsezzz6rxYsXa8yYMYqKipKPj09L1wUAADqQZgWOFStWKDU1Vffcc09L1wMAADqgZj2Ho7q6Wr/85S9buhYAANBBNStwPPDAA1q9enVL1wIAADqoZl1Sqays1Ntvv62NGzdqxIgR8vf391j+yiuvtEhxAACgY2hW4Pj+++81atQoSdKePXs8ltGBFAAAnK1ZgePLL79s6ToAAEAHxvD0AADAcs06w3HjjTee99LJpk2bml0QAADoeJoVOOr6b9SpqanRrl27tGfPnnMGdQMAAGhW4Hj11VcbnL9o0SJVVFRcUkGdjdvtUn5+viQpPz9fhmF4uSIAAFpes8dSachvfvMbXXPNNXrppZdacrUd2qljR/T8Jz+qZ98KFefmyNZvmLdLAgCgxbVop9GsrCx17dq1JVfZKQT3ukz26Bh1C4vwdikAAFiiWYFj6tSpHtMdd9yhsWPH6v7779dDDz3U5PUsX75cI0aMkM1mk81mk8Ph0BdffGEur6ysVGJionr27KmQkBBNmzZNRUVFHusoLCzU5MmT1a1bN4WHh2vevHmqra1tzm4BAACLNOuSit1u93jt6+uryy+/XIsXL9aECROavJ4+ffroxRdf1KBBg2QYhlatWqXbb79dO3fu1LBhwzR37lx99tlnWrt2rex2u5KSkjR16lRt3bpVkuRyuTR58mRFRkZq27ZtOnLkiO699175+/vrhRdeaM6uAQAACzQrcKxcubJFNn7bbbd5vP7d736n5cuXa/v27erTp4/effddrV69WuPHjze3O3ToUG3fvl1jx47V+vXrtW/fPm3cuFEREREaNWqUnnvuOT355JNatGiRAgICWqROAABwaS6pD0dOTo7ef/99vf/++9q5c+clFeJyubRmzRqdPHlSDodDOTk5qqmpUXx8vNlmyJAh6tevn7KysiSd6TMyfPhwRUT8s+9DQkKCysrKtHfv3ka3VVVVpbKy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5s+f741danUEjhb0+uuvG/369TMCAgKMa665xti+fbu3S+qw7rrrLiMqKsoICAgwLrvsMuOuu+4y8vPzzeWnT582/uM//sPo0aOH0a1bN+OOO+4wjhw54sWK27cvv/zSkHTONHPmTMMwztwa+/TTTxsRERFGYGCgcdNNNxm5ubke6zh27Jhx9913GyEhIYbNZjPuv/9+o7y83At70z6d7xicOnXKmDBhgtG7d2/D39/f6N+/v/Hggw+e8z88HIPma+izl2SsXLnSbNOU750ff/zRmDRpkhEUFGT06tXLeOyxx4yamppW3hvvYHh6AABgOfpwAAAAyxE4AACA5QgcAADAcgQOAABgOQIHAACwHIEDAABYjsABAAAsR+AAgAakpqaeM/IngOYjcAAAAMsROAB0atXV1d4uAegUCBwATOPGjdMjjzyiJ554QmFhYYqMjNSiRYskST/++KN8fHy0a9cus31JSYl8fHyUmZkpScrMzJSPj4/WrVunK6+8UkFBQRo/fryKi4v1xRdfaOjQobLZbPr1r3+tU6dOXbCetLQ0hYaGyuVySZJ27dolHx8fPfXUU2abBx54QL/5zW/M1//93/+tYcOGKTAwUAMGDNDLL7/ssc4BAwboueee07333iubzabZs2dLOnMJpV+/furWrZvuuOMOHTt2zON93333nW688UZ1795dNptNo0eP1jfffNPkzxbo7AgcADysWrVKwcHBys7O1tKlS7V48WJt2LDhotaxaNEivfHGG9q2bZsOHjyoO++8U8uWLdPq1av12Wefaf369Xr99dcvuJ7rr79e5eXl2rlzpyRp8+bN6tWrlxlw6uaNGzdOkpSTk6M777xT06dP1+7du7Vo0SI9/fTTSk1N9VjvSy+9pJEjR2rnzp16+umnlZ2drVmzZikpKUm7du3SjTfeqOeff97jPTNmzFCfPn20Y8cO5eTk6KmnnpK/v/9FfS5Ap+bt0eMAtB033HCDcd1113nMu/rqq40nn3zSKCgoMCQZO3fuNJedOHHCkGR8+eWXhmH8c0TTjRs3mm2WLFliSDJ++OEHc95DDz1kJCQkNKmmq666yvj9739vGIZhTJkyxfjd735nBAQEGOXl5cahQ4cMSUZeXp5hGIbx61//2rj55ps93j9v3jwjNjbWfN2/f39jypQpHm3uvvtu45ZbbvGYd9dddxl2u9183b17dyM1NbVJNQM4F2c4AHgYMWKEx+uoqCgVFxc3ex0RERHq1q2bBg4c6DGvqeu84YYblJmZKcMw9Ne//lVTp07V0KFD9dVXX2nz5s2Kjo7WoEGDJEn79+/Xtdde6/H+a6+9VgcOHDAvy0jSmDFjPNrs379fcXFxHvMcDofH6+TkZD3wwAOKj4/Xiy++qB9++KFJ9QM4g8ABwMPZlwl8fHzkdrvl63vm68IwDHNZTU3NBdfh4+PT6DqbYty4cfrqq6/03Xffyd/fX0OGDNG4ceOUmZmpzZs364YbbmjSeuoLDg6+6PcsWrRIe/fu1eTJk7Vp0ybFxsbqo48+uuj1AJ0VgQNAk/Tu3VuSdOTIEXNe/Q6kVqnrx/Hqq6+a4aIucGRmZpr9NyRp6NCh2rp1q8f7t27dqsGDB6tLly6NbmPo0KHKzs72mLd9+/Zz2g0ePFhz587V+vXrNXXqVK1cufIS9gzoXAgcAJokKChIY8eO1Ysvvqj9+/dr8+bNWrBggeXb7dGjh0aMGKE//elPZrj41a9+pW+//VZ5eXkeZzgee+wxZWRk6LnnnlNeXp5WrVqlN954Q48//vh5t/HII48oPT1dL730kg4cOKA33nhD6enp5vLTp08rKSlJmZmZ+umnn7R161bt2LFDQ4cOtWSfgY6IwAGgyd577z3V1tZq9OjRevTRR8+5k8MqN9xwg1wulxk4wsLCFBsbq8jISF1++eVmu6uuukoffvih1qxZoyuuuEILFy7U4sWLdd999513/WPHjtU777yjP/zhDxo5cqTWr1/vEaa6dOmiY8eO6d5779XgwYN15513atKkSXr22Wet2F2gQ/Ix6l+QBQAAsABnOAAAgOUIHAC8prCwUCEhIY1OhYWF3i4RQAvhkgoAr6mtrdWPP/7Y6PIBAwbIz8+v9QoCYBkCBwAAsByXVAAAgOUIHAAAwHIEDgAAYDkCBwAAsByBAwAAWI7AAQAALEfgAAAAliNwAAAAy/1/ll91q+iQ2XIAAAAASUVORK5CYII=\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","sns.heatmap(df1.corr(),annot=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":605},"id":"yUWvdVUjLeho","executionInfo":{"status":"ok","timestamp":1707062683090,"user_tz":480,"elapsed":933,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"aacf7daf-199c-460f-e87a-ab233de4ffc4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-351-005e2f68cb57>:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  sns.heatmap(df1.corr(),annot=True)\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":351},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","# Check the similarities\n","sns.pairplot(df1,hue='target')\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"aQukw7mNLfJU","executionInfo":{"status":"ok","timestamp":1707062704611,"user_tz":480,"elapsed":13521,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"7f70ea7e-e1f3-4635-c9d6-50bd9d8dad8f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.PairGrid at 0x78eee8465a80>"]},"metadata":{},"execution_count":352},{"output_type":"display_data","data":{"text/plain":["<Figure size 1058.88x1000 with 20 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#STEP 3 ( DATA PREPROCESSING\n","#Tokenization\n","#Removing special characters\n","#Removing full stop ,stop words and puntutation\n","#STEMMING(Same meaning into one words)\n","\n","#lower case\n","\n","def transform_text(text):\n","  text=text.lower()\n"],"metadata":{"id":"a8u6QqbJMIUZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def transform_text(text):\n","    text = text.lower()\n","    text = nltk.word_tokenize(text)\n","\n","    y = []\n","    for i in text:\n","        if i.isalnum():\n","            y.append(i)\n","\n","    text = y[:]\n","    y.clear()\n","\n","    for i in text:\n","        if i not in stopwords.words('english') and i not in string.punctuation:\n","            y.append(i)\n","\n","    text = y[:]\n","    y.clear()\n","\n","    for i in text:\n","        y.append(ps.stem(i))\n","\n","\n","    return \" \".join(y)"],"metadata":{"id":"twMsNfnpZkU6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["transform_text('hi how are 20!  subodh you?')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"1Fo3KFF2M_Ef","executionInfo":{"status":"ok","timestamp":1707062727317,"user_tz":480,"elapsed":7,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"71ee0fe5-e8b8-4012-9318-18c085a2b9d5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'hi 20 subodh'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":355}]},{"cell_type":"code","source":["df1['text'][2000]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"cdSrciKkNH_5","executionInfo":{"status":"ok","timestamp":1707062729219,"user_tz":480,"elapsed":10,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"ee48a4eb-6e27-4727-eeee-f0585adf9c85"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"LMAO where's your fish memory when I need it?\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":356}]},{"cell_type":"code","source":["from nltk.stem.porter import PorterStemmer\n","ps=PorterStemmer()\n","ps.stem('loving')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"Jc-0DOrSTfxR","executionInfo":{"status":"ok","timestamp":1707062733370,"user_tz":480,"elapsed":479,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"991347fa-f105-4e9c-821d-c1da502ba9bf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'love'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":357}]},{"cell_type":"code","source":["df1['text'].apply(transform_text)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H-VgIKxSi39X","executionInfo":{"status":"ok","timestamp":1707062754540,"user_tz":480,"elapsed":15500,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"b8a2c170-9fd9-43f6-8824-b62e19e2b222"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       go jurong point crazi avail bugi n great world...\n","1                                   ok lar joke wif u oni\n","2       free entri 2 wkli comp win fa cup final tkt 21...\n","3                     u dun say earli hor u c alreadi say\n","4                    nah think goe usf live around though\n","                              ...                        \n","5567    2nd time tri 2 contact u pound prize 2 claim e...\n","5568                              ü b go esplanad fr home\n","5569                                    piti mood suggest\n","5570    guy bitch act like interest buy someth els nex...\n","5571                                       rofl true name\n","Name: text, Length: 5157, dtype: object"]},"metadata":{},"execution_count":358}]},{"cell_type":"code","source":["df1['transformed_text']=df1['text'].apply(transform_text)"],"metadata":{"id":"LfchTiFsUWKR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1707062769414,"user_tz":480,"elapsed":12402,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"89de8f3f-803a-4634-f0bb-fdf2cbb187af"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-359-25a3c1a01422>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df1['transformed_text']=df1['text'].apply(transform_text)\n"]}]},{"cell_type":"code","source":["df1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"TDk1FFM0UwY2","executionInfo":{"status":"ok","timestamp":1707062777584,"user_tz":480,"elapsed":491,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"f425ecc2-2455-440e-e32e-416e255ed4d8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   target                                               text   target  \\\n","0       0  Go until jurong point, crazy.. Available only ...      1.0   \n","1       0                      Ok lar... Joking wif u oni...      1.0   \n","2       1  Free entry in 2 a wkly comp to win FA Cup fina...      0.0   \n","3       0  U dun say so early hor... U c already then say...      1.0   \n","4       0  Nah I don't think he goes to usf, he lives aro...      1.0   \n","\n","   num_words  num_sentences  num_characters  \\\n","0         24              2             111   \n","1          8              2              29   \n","2         37              2             155   \n","3         13              1              49   \n","4         15              1              61   \n","\n","                                    transformed_text  \n","0  go jurong point crazi avail bugi n great world...  \n","1                              ok lar joke wif u oni  \n","2  free entri 2 wkli comp win fa cup final tkt 21...  \n","3                u dun say earli hor u c alreadi say  \n","4               nah think goe usf live around though  "],"text/html":["\n","  <div id=\"df-b331de8f-4a7f-4bad-8c82-3a1b6ebecbb8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>target</th>\n","      <th>text</th>\n","      <th>target</th>\n","      <th>num_words</th>\n","      <th>num_sentences</th>\n","      <th>num_characters</th>\n","      <th>transformed_text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Go until jurong point, crazy.. Available only ...</td>\n","      <td>1.0</td>\n","      <td>24</td>\n","      <td>2</td>\n","      <td>111</td>\n","      <td>go jurong point crazi avail bugi n great world...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>Ok lar... Joking wif u oni...</td>\n","      <td>1.0</td>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>29</td>\n","      <td>ok lar joke wif u oni</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n","      <td>0.0</td>\n","      <td>37</td>\n","      <td>2</td>\n","      <td>155</td>\n","      <td>free entri 2 wkli comp win fa cup final tkt 21...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>U dun say so early hor... U c already then say...</td>\n","      <td>1.0</td>\n","      <td>13</td>\n","      <td>1</td>\n","      <td>49</td>\n","      <td>u dun say earli hor u c alreadi say</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>Nah I don't think he goes to usf, he lives aro...</td>\n","      <td>1.0</td>\n","      <td>15</td>\n","      <td>1</td>\n","      <td>61</td>\n","      <td>nah think goe usf live around though</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b331de8f-4a7f-4bad-8c82-3a1b6ebecbb8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b331de8f-4a7f-4bad-8c82-3a1b6ebecbb8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b331de8f-4a7f-4bad-8c82-3a1b6ebecbb8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-80511e7f-2ac8-4b38-821c-3b572d4f8f00\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-80511e7f-2ac8-4b38-821c-3b572d4f8f00')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-80511e7f-2ac8-4b38-821c-3b572d4f8f00 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":360}]},{"cell_type":"code","source":["#WordCloud of spam messages"],"metadata":{"id":"mi-oHSxwU--Z"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from wordcloud import WordCloud\n","wc=WordCloud(width=50,height=50,min_font_size=10,background_color='white')"],"metadata":{"id":"KhU9L30oVEMJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["!pip install wordcloud matplotlib"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N91PAPowXHf6","executionInfo":{"status":"ok","timestamp":1707062795841,"user_tz":480,"elapsed":6991,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"def68e6e-cd3b-4e11-e1a1-ddc660e05533"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: wordcloud in /usr/local/lib/python3.10/dist-packages (1.9.3)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (3.7.1)\n","Requirement already satisfied: numpy>=1.6.1 in /usr/local/lib/python3.10/dist-packages (from wordcloud) (1.23.5)\n","Requirement already satisfied: pillow in /usr/local/lib/python3.10/dist-packages (from wordcloud) (9.4.0)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.2.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (4.47.2)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.4.5)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (23.2)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (3.1.1)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib) (1.16.0)\n"]}]},{"cell_type":"code","source":["wc.generate(df1[df1['target'] == 1]['transformed_text'].str.cat(sep=\" \"))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7rsD1FYTVItK","executionInfo":{"status":"ok","timestamp":1707062795842,"user_tz":480,"elapsed":23,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"f1900c38-b995-4915-8886-5f3c24388718"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<wordcloud.wordcloud.WordCloud at 0x78eee0e76020>"]},"metadata":{},"execution_count":363}]},{"cell_type":"code","source":["ham_wc = wc.generate(df1[df1['target']==1]['transformed_text'].str.cat(sep=\" \"))\n"],"metadata":{"id":"HZvOWXm3YCyg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(10,6))\n","plt.imshow(ham_wc)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":540},"id":"95fgh_MNgEnV","executionInfo":{"status":"ok","timestamp":1707062853569,"user_tz":480,"elapsed":1400,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"14e2078b-51f9-4e91-9fea-31d10de72556"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x78eee0bfb8e0>"]},"metadata":{},"execution_count":368},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["wc.generate(df1[df1['target'] == 0]['transformed_text'].str.cat(sep=\" \"))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Yjqago6l4A0I","executionInfo":{"status":"ok","timestamp":1707062899227,"user_tz":480,"elapsed":1025,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"5baa060d-3b02-4e41-ff81-b9c53da08b65"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<wordcloud.wordcloud.WordCloud at 0x78eee0e76020>"]},"metadata":{},"execution_count":370}]},{"cell_type":"code","source":["ham_wc = wc.generate(df1[df1['target'] == 0]['transformed_text'].str.cat(sep=\" \"))\n"],"metadata":{"id":"7XA71ZkR4NAe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(15,6))\n","plt.imshow(ham_wc)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":540},"id":"WezwZClF57al","executionInfo":{"status":"ok","timestamp":1707063373485,"user_tz":480,"elapsed":843,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"eb4e62dc-5f93-4420-9f5e-8765f9c0a615"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x78eee0bf1ba0>"]},"metadata":{},"execution_count":387},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["spam_corpus = []\n","for msg in df1[df1['target'] == 1]['transformed_text'].tolist():\n","    for word in msg.split():\n","        spam_corpus.append(word)\n"],"metadata":{"id":"w79E6L1DhnoK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["len(spam_corpus)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NDFpWmLi4jBn","executionInfo":{"status":"ok","timestamp":1707063383208,"user_tz":480,"elapsed":533,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"12afca12-22fc-40e2-860c-a72e0b5ab481"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["9781"]},"metadata":{},"execution_count":389}]},{"cell_type":"code","source":["from collections import Counter\n"],"metadata":{"id":"iLS36CrG_4j6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sns.barplot(pd.DataFrame(Counter(spam_corpus).most_common(30))[0],pd.DataFrame(Counter(spam_corpus).most_common(30))[1])\n","plt.xticks(rotation='vertical')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":210},"id":"sjnIVoz04mrt","executionInfo":{"status":"error","timestamp":1707064930155,"user_tz":480,"elapsed":472,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"84c1ec9f-8104-440d-fa20-c2d74fa3a664"},"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"barplot() takes from 0 to 1 positional arguments but 2 were given","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-446-b62a2edfdffc>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbarplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mCounter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mspam_corpus\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmost_common\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m30\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mCounter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mspam_corpus\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmost_common\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m30\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mxticks\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrotation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'vertical'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: barplot() takes from 0 to 1 positional arguments but 2 were given"]}]},{"cell_type":"code","source":["df1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"-KGTtVK75LeQ","executionInfo":{"status":"ok","timestamp":1707063179421,"user_tz":480,"elapsed":27,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"68561f9f-2647-43d0-9de1-1f6be48b816b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   target                                               text   target  \\\n","0       0  Go until jurong point, crazy.. Available only ...      1.0   \n","1       0                      Ok lar... Joking wif u oni...      1.0   \n","2       1  Free entry in 2 a wkly comp to win FA Cup fina...      0.0   \n","3       0  U dun say so early hor... U c already then say...      1.0   \n","4       0  Nah I don't think he goes to usf, he lives aro...      1.0   \n","\n","   num_words  num_sentences  num_characters  \\\n","0         24              2             111   \n","1          8              2              29   \n","2         37              2             155   \n","3         13              1              49   \n","4         15              1              61   \n","\n","                                    transformed_text  \n","0  go jurong point crazi avail bugi n great world...  \n","1                              ok lar joke wif u oni  \n","2  free entri 2 wkli comp win fa cup final tkt 21...  \n","3                u dun say earli hor u c alreadi say  \n","4               nah think goe usf live around though  "],"text/html":["\n","  <div id=\"df-a57c2410-922b-4d87-83a9-80c2d1f0135b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>target</th>\n","      <th>text</th>\n","      <th>target</th>\n","      <th>num_words</th>\n","      <th>num_sentences</th>\n","      <th>num_characters</th>\n","      <th>transformed_text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Go until jurong point, crazy.. Available only ...</td>\n","      <td>1.0</td>\n","      <td>24</td>\n","      <td>2</td>\n","      <td>111</td>\n","      <td>go jurong point crazi avail bugi n great world...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>Ok lar... Joking wif u oni...</td>\n","      <td>1.0</td>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>29</td>\n","      <td>ok lar joke wif u oni</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n","      <td>0.0</td>\n","      <td>37</td>\n","      <td>2</td>\n","      <td>155</td>\n","      <td>free entri 2 wkli comp win fa cup final tkt 21...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>U dun say so early hor... U c already then say...</td>\n","      <td>1.0</td>\n","      <td>13</td>\n","      <td>1</td>\n","      <td>49</td>\n","      <td>u dun say earli hor u c alreadi say</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>Nah I don't think he goes to usf, he lives aro...</td>\n","      <td>1.0</td>\n","      <td>15</td>\n","      <td>1</td>\n","      <td>61</td>\n","      <td>nah think goe usf live around though</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a57c2410-922b-4d87-83a9-80c2d1f0135b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a57c2410-922b-4d87-83a9-80c2d1f0135b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a57c2410-922b-4d87-83a9-80c2d1f0135b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-62f76392-87c3-4a66-92bf-37110b29889a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-62f76392-87c3-4a66-92bf-37110b29889a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-62f76392-87c3-4a66-92bf-37110b29889a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":385}]},{"cell_type":"code","source":["ham_corpus = []\n","for msg in df1[df1['target'] == 0]['transformed_text'].tolist():\n","    for word in msg.split():\n","        ham_corpus.append(word)\n"],"metadata":{"id":"l2Jm2W0t5NCu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["len(ham_corpus)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R8KoaX5F6TL2","executionInfo":{"status":"ok","timestamp":1707063490389,"user_tz":480,"elapsed":625,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"82065b63-553d-4afe-f3ad-7e5dadabb53b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["35940"]},"metadata":{},"execution_count":394}]},{"cell_type":"code","source":["from collections import Counter\n","sns.barplot(pd.DataFrame(Counter(ham_corpus).most_common(30))[0],pd.DataFrame(Counter(ham_corpus).most_common(30))[1])\n","plt.xticks(rotation='vertical')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":227},"id":"HqVfCFQU6bbf","executionInfo":{"status":"error","timestamp":1707063562890,"user_tz":480,"elapsed":524,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"e9c9bd93-130b-4a7b-ef67-4679bca348f7"},"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"barplot() takes from 0 to 1 positional arguments but 2 were given","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-396-5170bf3b39b4>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mcollections\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mCounter\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbarplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mCounter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mham_corpus\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmost_common\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m30\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mCounter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mham_corpus\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmost_common\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m30\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mxticks\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrotation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'vertical'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: barplot() takes from 0 to 1 positional arguments but 2 were given"]}]},{"cell_type":"code","source":["# Model Building\n","from sklearn.feature_extraction.text import CountVectorizer,TfidfVectorizer\n","cv = CountVectorizer()\n","tfidf = TfidfVectorizer(max_features=3000)"],"metadata":{"id":"qZG5CByL6s1p"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X = tfidf.fit_transform(df1['transformed_text']).toarray()\n"],"metadata":{"id":"5cm2jWZf62qI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#from sklearn.preprocessing import MinMaxScaler\n","#scaler = MinMaxScaler()\n","#X = scaler.fit_transform(X)\n","#from sklearn.preprocessing import MinMaxScaler\n","#scaler = MinMaxScaler()\n","#X = scaler.fit_transform(X)\n","X.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uPpBX_p366lC","executionInfo":{"status":"ok","timestamp":1707063666861,"user_tz":480,"elapsed":12,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"d3534119-9d44-43ef-d55e-7edc6e4749a8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5157, 3000)"]},"metadata":{},"execution_count":403}]},{"cell_type":"code","source":["y = df1['target'].values"],"metadata":{"id":"Tf9UBv2M7GNv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=2)\n"],"metadata":{"id":"_H3KUNTE7Il2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.naive_bayes import GaussianNB,MultinomialNB,BernoulliNB\n","from sklearn.metrics import accuracy_score,confusion_matrix,precision_score"],"metadata":{"id":"ts_67yNk7PkD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["gnb = GaussianNB()\n","mnb = MultinomialNB()\n","bnb = BernoulliNB()"],"metadata":{"id":"iJs05ZzK7Tvu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["gnb.fit(X_train,y_train)\n","y_pred1 = gnb.predict(X_test)\n","print(accuracy_score(y_test,y_pred1))\n","print(confusion_matrix(y_test,y_pred1))\n","print(precision_score(y_test,y_pred1))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NrfDqFzl7VjB","executionInfo":{"status":"ok","timestamp":1707063740955,"user_tz":480,"elapsed":531,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"e5fdbec5-9803-4c44-d448-b75e387b6ba4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.8672480620155039\n","[[785 120]\n"," [ 17 110]]\n","0.4782608695652174\n"]}]},{"cell_type":"code","source":["mnb.fit(X_train,y_train)\n","y_pred2 = mnb.predict(X_test)\n","print(accuracy_score(y_test,y_pred2))\n","print(confusion_matrix(y_test,y_pred2))\n","print(precision_score(y_test,y_pred2))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q6R7OFy-7YNP","executionInfo":{"status":"ok","timestamp":1707063754759,"user_tz":480,"elapsed":565,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"9b090533-d037-4ff6-9bdf-b58a1a271be7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.9709302325581395\n","[[905   0]\n"," [ 30  97]]\n","1.0\n"]}]},{"cell_type":"code","source":["bnb.fit(X_train,y_train)\n","y_pred3 = bnb.predict(X_test)\n","print(accuracy_score(y_test,y_pred3))\n","print(confusion_matrix(y_test,y_pred3))\n","print(precision_score(y_test,y_pred3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"axsot6Lc7bnG","executionInfo":{"status":"ok","timestamp":1707063762265,"user_tz":480,"elapsed":494,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"2bda1c4d-c7ad-4f45-f5cb-ef1ddf6a4f9e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.9835271317829457\n","[[903   2]\n"," [ 15 112]]\n","0.9824561403508771\n"]}]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","from sklearn.svm import SVC\n","from sklearn.naive_bayes import MultinomialNB\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.ensemble import AdaBoostClassifier\n","from sklearn.ensemble import BaggingClassifier\n","from sklearn.ensemble import ExtraTreesClassifier\n","from sklearn.ensemble import GradientBoostingClassifier\n","from xgboost import XGBClassifier"],"metadata":{"id":"UuUAl8st7f_k"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["svc = SVC(kernel='sigmoid', gamma=1.0)\n","knc = KNeighborsClassifier()\n","mnb = MultinomialNB()\n","dtc = DecisionTreeClassifier(max_depth=5)\n","lrc = LogisticRegression(solver='liblinear', penalty='l1')\n","rfc = RandomForestClassifier(n_estimators=50, random_state=2)\n","abc = AdaBoostClassifier(n_estimators=50, random_state=2)\n","bc = BaggingClassifier(n_estimators=50, random_state=2)\n","etc = ExtraTreesClassifier(n_estimators=50, random_state=2)\n","gbdt = GradientBoostingClassifier(n_estimators=50,random_state=2)\n","xgb = XGBClassifier(n_estimators=50,random_state=2)"],"metadata":{"id":"9vyrRn-U7iaR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["clfs = {\n","    'SVC' : svc,\n","    'KN' : knc,\n","    'NB': mnb,\n","    'DT': dtc,\n","    'LR': lrc,\n","    'RF': rfc,\n","    'AdaBoost': abc,\n","    'BgC': bc,\n","    'ETC': etc,\n","    'GBDT':gbdt,\n","    'xgb':xgb\n","}"],"metadata":{"id":"cMubSkbJ7kSm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def train_classifier(clf,X_train,y_train,X_test,y_test):\n","    clf.fit(X_train,y_train)\n","    y_pred = clf.predict(X_test)\n","    accuracy = accuracy_score(y_test,y_pred)\n","    precision = precision_score(y_test,y_pred)\n","\n","    return accuracy,precision"],"metadata":{"id":"Iy9NHleg7rkF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_classifier(svc,X_train,y_train,X_test,y_test)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xzvyMMPR7uVW","executionInfo":{"status":"ok","timestamp":1707063845765,"user_tz":480,"elapsed":12611,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"d06496e1-9387-43ca-d914-478e36a6d2d9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.9757751937984496, 0.9811320754716981)"]},"metadata":{},"execution_count":421}]},{"cell_type":"code","source":["accuracy_scores = []\n","precision_scores = []\n","\n","for name,clf in clfs.items():\n","\n","    current_accuracy,current_precision = train_classifier(clf, X_train,y_train,X_test,y_test)\n","\n","    print(\"For \",name)\n","    print(\"Accuracy - \",current_accuracy)\n","    print(\"Precision - \",current_precision)\n","\n","    accuracy_scores.append(current_accuracy)\n","    precision_scores.append(current_precision)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PKJkzk3-7xFx","executionInfo":{"status":"ok","timestamp":1707064129263,"user_tz":480,"elapsed":283503,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"db3ff4c5-468d-44f2-db0e-d01a5ca191ac"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["For  SVC\n","Accuracy -  0.9757751937984496\n","Precision -  0.9811320754716981\n","For  KN\n","Accuracy -  0.9127906976744186\n","Precision -  1.0\n","For  NB\n","Accuracy -  0.9709302325581395\n","Precision -  1.0\n","For  DT\n","Accuracy -  0.936046511627907\n","Precision -  0.8210526315789474\n","For  LR\n","Accuracy -  0.9583333333333334\n","Precision -  0.9375\n","For  RF\n","Accuracy -  0.9728682170542635\n","Precision -  1.0\n","For  AdaBoost\n","Accuracy -  0.9660852713178295\n","Precision -  0.9423076923076923\n","For  BgC\n","Accuracy -  0.9612403100775194\n","Precision -  0.8918918918918919\n","For  ETC\n","Accuracy -  0.9777131782945736\n","Precision -  0.9905660377358491\n","For  GBDT\n","Accuracy -  0.9554263565891473\n","Precision -  0.9764705882352941\n","For  xgb\n","Accuracy -  0.9728682170542635\n","Precision -  0.9714285714285714\n"]}]},{"cell_type":"code","source":["performance_df = pd.DataFrame({'Algorithm':clfs.keys(),'Accuracy':accuracy_scores,'Precision':precision_scores}).sort_values('Precision',ascending=False)\n"],"metadata":{"id":"cc1ihNwh70hG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["performance_df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"Q-Bp946t75gY","executionInfo":{"status":"ok","timestamp":1707064129264,"user_tz":480,"elapsed":20,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"be0256b1-e36c-4d40-f1b7-9e390ea09204"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Algorithm  Accuracy  Precision\n","1         KN  0.912791   1.000000\n","2         NB  0.970930   1.000000\n","5         RF  0.972868   1.000000\n","8        ETC  0.977713   0.990566\n","0        SVC  0.975775   0.981132\n","9       GBDT  0.955426   0.976471\n","10       xgb  0.972868   0.971429\n","6   AdaBoost  0.966085   0.942308\n","4         LR  0.958333   0.937500\n","7        BgC  0.961240   0.891892\n","3         DT  0.936047   0.821053"],"text/html":["\n","  <div id=\"df-10f3524d-0a07-48a3-bcc0-e21616618c03\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Algorithm</th>\n","      <th>Accuracy</th>\n","      <th>Precision</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>KN</td>\n","      <td>0.912791</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NB</td>\n","      <td>0.970930</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>RF</td>\n","      <td>0.972868</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>ETC</td>\n","      <td>0.977713</td>\n","      <td>0.990566</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>SVC</td>\n","      <td>0.975775</td>\n","      <td>0.981132</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>GBDT</td>\n","      <td>0.955426</td>\n","      <td>0.976471</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>xgb</td>\n","      <td>0.972868</td>\n","      <td>0.971429</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>AdaBoost</td>\n","      <td>0.966085</td>\n","      <td>0.942308</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>LR</td>\n","      <td>0.958333</td>\n","      <td>0.937500</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>BgC</td>\n","      <td>0.961240</td>\n","      <td>0.891892</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>DT</td>\n","      <td>0.936047</td>\n","      <td>0.821053</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-10f3524d-0a07-48a3-bcc0-e21616618c03')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-10f3524d-0a07-48a3-bcc0-e21616618c03 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-10f3524d-0a07-48a3-bcc0-e21616618c03');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5b1715c3-1404-4132-9810-d1444cf13809\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5b1715c3-1404-4132-9810-d1444cf13809')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5b1715c3-1404-4132-9810-d1444cf13809 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f16ce491-7252-4e1b-8326-24001e6453f0\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('performance_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f16ce491-7252-4e1b-8326-24001e6453f0 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('performance_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":424}]},{"cell_type":"code","source":["performance_df1 = pd.melt(performance_df, id_vars = \"Algorithm\")\n"],"metadata":{"id":"4CFiq8ha776N"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["performance_df1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":739},"id":"pLAxpLxu7_zt","executionInfo":{"status":"ok","timestamp":1707064129265,"user_tz":480,"elapsed":15,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"32e3eea6-ba5d-44d5-82f2-149dfa56da3c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Algorithm   variable     value\n","0         KN   Accuracy  0.912791\n","1         NB   Accuracy  0.970930\n","2         RF   Accuracy  0.972868\n","3        ETC   Accuracy  0.977713\n","4        SVC   Accuracy  0.975775\n","5       GBDT   Accuracy  0.955426\n","6        xgb   Accuracy  0.972868\n","7   AdaBoost   Accuracy  0.966085\n","8         LR   Accuracy  0.958333\n","9        BgC   Accuracy  0.961240\n","10        DT   Accuracy  0.936047\n","11        KN  Precision  1.000000\n","12        NB  Precision  1.000000\n","13        RF  Precision  1.000000\n","14       ETC  Precision  0.990566\n","15       SVC  Precision  0.981132\n","16      GBDT  Precision  0.976471\n","17       xgb  Precision  0.971429\n","18  AdaBoost  Precision  0.942308\n","19        LR  Precision  0.937500\n","20       BgC  Precision  0.891892\n","21        DT  Precision  0.821053"],"text/html":["\n","  <div id=\"df-7c1f617e-e47b-4fda-80cc-348ffc2597fd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Algorithm</th>\n","      <th>variable</th>\n","      <th>value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>KN</td>\n","      <td>Accuracy</td>\n","      <td>0.912791</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>NB</td>\n","      <td>Accuracy</td>\n","      <td>0.970930</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>RF</td>\n","      <td>Accuracy</td>\n","      <td>0.972868</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ETC</td>\n","      <td>Accuracy</td>\n","      <td>0.977713</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>SVC</td>\n","      <td>Accuracy</td>\n","      <td>0.975775</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>GBDT</td>\n","      <td>Accuracy</td>\n","      <td>0.955426</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>xgb</td>\n","      <td>Accuracy</td>\n","      <td>0.972868</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>AdaBoost</td>\n","      <td>Accuracy</td>\n","      <td>0.966085</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>LR</td>\n","      <td>Accuracy</td>\n","      <td>0.958333</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>BgC</td>\n","      <td>Accuracy</td>\n","      <td>0.961240</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>DT</td>\n","      <td>Accuracy</td>\n","      <td>0.936047</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>KN</td>\n","      <td>Precision</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>NB</td>\n","      <td>Precision</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>RF</td>\n","      <td>Precision</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>ETC</td>\n","      <td>Precision</td>\n","      <td>0.990566</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>SVC</td>\n","      <td>Precision</td>\n","      <td>0.981132</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>GBDT</td>\n","      <td>Precision</td>\n","      <td>0.976471</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>xgb</td>\n","      <td>Precision</td>\n","      <td>0.971429</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>AdaBoost</td>\n","      <td>Precision</td>\n","      <td>0.942308</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>LR</td>\n","      <td>Precision</td>\n","      <td>0.937500</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>BgC</td>\n","      <td>Precision</td>\n","      <td>0.891892</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>DT</td>\n","      <td>Precision</td>\n","      <td>0.821053</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7c1f617e-e47b-4fda-80cc-348ffc2597fd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7c1f617e-e47b-4fda-80cc-348ffc2597fd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7c1f617e-e47b-4fda-80cc-348ffc2597fd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-84d3c592-de86-4318-b5e2-c374a2818100\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-84d3c592-de86-4318-b5e2-c374a2818100')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-84d3c592-de86-4318-b5e2-c374a2818100 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a35ce13b-886f-4094-aeb7-151d1979d64f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('performance_df1')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a35ce13b-886f-4094-aeb7-151d1979d64f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('performance_df1');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":426}]},{"cell_type":"code","source":["sns.catplot(x = 'Algorithm', y='value',\n","               hue = 'variable',data=performance_df1, kind='bar',height=5)\n","plt.ylim(0.5,1.0)\n","plt.xticks(rotation='vertical')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"B-KePtJy8NW3","executionInfo":{"status":"ok","timestamp":1707064140968,"user_tz":480,"elapsed":11,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"bf32151d-1c86-45a9-e58b-09ecc7a588a8"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 613.5x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["temp_df = pd.DataFrame({'Algorithm':clfs.keys(),'Accuracy_max_ft_3000':accuracy_scores,'Precision_max_ft_3000':precision_scores}).sort_values('Precision_max_ft_3000',ascending=False)\n"],"metadata":{"id":"AQZZA94y8NlA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["temp_df = pd.DataFrame({'Algorithm':clfs.keys(),'Accuracy_scaling':accuracy_scores,'Precision_scaling':precision_scores}).sort_values('Precision_scaling',ascending=False)\n"],"metadata":{"id":"Q6YPJy1l8Nnx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["new_df = performance_df.merge(temp_df,on='Algorithm')\n"],"metadata":{"id":"h1EJkc7y8Nqk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["new_df_scaled = new_df.merge(temp_df,on='Algorithm')\n"],"metadata":{"id":"qrCOP0p18Ntw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["temp_df = pd.DataFrame({'Algorithm':clfs.keys(),'Accuracy_num_chars':accuracy_scores,'Precision_num_chars':precision_scores}).sort_values('Precision_num_chars',ascending=False)\n"],"metadata":{"id":"OCDnKzxK8ZQN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["new_df_scaled.merge(temp_df,on='Algorithm')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":414},"id":"_EYMbZR-8ZS6","executionInfo":{"status":"ok","timestamp":1707064151014,"user_tz":480,"elapsed":10,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"e2c6091b-1d3e-48a5-ce3b-9e0faba627f0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Algorithm  Accuracy  Precision  Accuracy_scaling_x  Precision_scaling_x  \\\n","0         KN  0.912791   1.000000            0.912791             1.000000   \n","1         NB  0.970930   1.000000            0.970930             1.000000   \n","2         RF  0.972868   1.000000            0.972868             1.000000   \n","3        ETC  0.977713   0.990566            0.977713             0.990566   \n","4        SVC  0.975775   0.981132            0.975775             0.981132   \n","5       GBDT  0.955426   0.976471            0.955426             0.976471   \n","6        xgb  0.972868   0.971429            0.972868             0.971429   \n","7   AdaBoost  0.966085   0.942308            0.966085             0.942308   \n","8         LR  0.958333   0.937500            0.958333             0.937500   \n","9        BgC  0.961240   0.891892            0.961240             0.891892   \n","10        DT  0.936047   0.821053            0.936047             0.821053   \n","\n","    Accuracy_scaling_y  Precision_scaling_y  Accuracy_num_chars  \\\n","0             0.912791             1.000000            0.912791   \n","1             0.970930             1.000000            0.970930   \n","2             0.972868             1.000000            0.972868   \n","3             0.977713             0.990566            0.977713   \n","4             0.975775             0.981132            0.975775   \n","5             0.955426             0.976471            0.955426   \n","6             0.972868             0.971429            0.972868   \n","7             0.966085             0.942308            0.966085   \n","8             0.958333             0.937500            0.958333   \n","9             0.961240             0.891892            0.961240   \n","10            0.936047             0.821053            0.936047   \n","\n","    Precision_num_chars  \n","0              1.000000  \n","1              1.000000  \n","2              1.000000  \n","3              0.990566  \n","4              0.981132  \n","5              0.976471  \n","6              0.971429  \n","7              0.942308  \n","8              0.937500  \n","9              0.891892  \n","10             0.821053  "],"text/html":["\n","  <div id=\"df-8c3c290b-9704-4957-af3f-de96813a0def\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Algorithm</th>\n","      <th>Accuracy</th>\n","      <th>Precision</th>\n","      <th>Accuracy_scaling_x</th>\n","      <th>Precision_scaling_x</th>\n","      <th>Accuracy_scaling_y</th>\n","      <th>Precision_scaling_y</th>\n","      <th>Accuracy_num_chars</th>\n","      <th>Precision_num_chars</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>KN</td>\n","      <td>0.912791</td>\n","      <td>1.000000</td>\n","      <td>0.912791</td>\n","      <td>1.000000</td>\n","      <td>0.912791</td>\n","      <td>1.000000</td>\n","      <td>0.912791</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>NB</td>\n","      <td>0.970930</td>\n","      <td>1.000000</td>\n","      <td>0.970930</td>\n","      <td>1.000000</td>\n","      <td>0.970930</td>\n","      <td>1.000000</td>\n","      <td>0.970930</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>RF</td>\n","      <td>0.972868</td>\n","      <td>1.000000</td>\n","      <td>0.972868</td>\n","      <td>1.000000</td>\n","      <td>0.972868</td>\n","      <td>1.000000</td>\n","      <td>0.972868</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ETC</td>\n","      <td>0.977713</td>\n","      <td>0.990566</td>\n","      <td>0.977713</td>\n","      <td>0.990566</td>\n","      <td>0.977713</td>\n","      <td>0.990566</td>\n","      <td>0.977713</td>\n","      <td>0.990566</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>SVC</td>\n","      <td>0.975775</td>\n","      <td>0.981132</td>\n","      <td>0.975775</td>\n","      <td>0.981132</td>\n","      <td>0.975775</td>\n","      <td>0.981132</td>\n","      <td>0.975775</td>\n","      <td>0.981132</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>GBDT</td>\n","      <td>0.955426</td>\n","      <td>0.976471</td>\n","      <td>0.955426</td>\n","      <td>0.976471</td>\n","      <td>0.955426</td>\n","      <td>0.976471</td>\n","      <td>0.955426</td>\n","      <td>0.976471</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>xgb</td>\n","      <td>0.972868</td>\n","      <td>0.971429</td>\n","      <td>0.972868</td>\n","      <td>0.971429</td>\n","      <td>0.972868</td>\n","      <td>0.971429</td>\n","      <td>0.972868</td>\n","      <td>0.971429</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>AdaBoost</td>\n","      <td>0.966085</td>\n","      <td>0.942308</td>\n","      <td>0.966085</td>\n","      <td>0.942308</td>\n","      <td>0.966085</td>\n","      <td>0.942308</td>\n","      <td>0.966085</td>\n","      <td>0.942308</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>LR</td>\n","      <td>0.958333</td>\n","      <td>0.937500</td>\n","      <td>0.958333</td>\n","      <td>0.937500</td>\n","      <td>0.958333</td>\n","      <td>0.937500</td>\n","      <td>0.958333</td>\n","      <td>0.937500</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>BgC</td>\n","      <td>0.961240</td>\n","      <td>0.891892</td>\n","      <td>0.961240</td>\n","      <td>0.891892</td>\n","      <td>0.961240</td>\n","      <td>0.891892</td>\n","      <td>0.961240</td>\n","      <td>0.891892</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>DT</td>\n","      <td>0.936047</td>\n","      <td>0.821053</td>\n","      <td>0.936047</td>\n","      <td>0.821053</td>\n","      <td>0.936047</td>\n","      <td>0.821053</td>\n","      <td>0.936047</td>\n","      <td>0.821053</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8c3c290b-9704-4957-af3f-de96813a0def')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8c3c290b-9704-4957-af3f-de96813a0def button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8c3c290b-9704-4957-af3f-de96813a0def');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6cdfc938-b2b3-4f0e-a9c0-ad452387d15b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6cdfc938-b2b3-4f0e-a9c0-ad452387d15b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6cdfc938-b2b3-4f0e-a9c0-ad452387d15b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":433}]},{"cell_type":"code","source":["svc = SVC(kernel='sigmoid', gamma=1.0,probability=True)\n","mnb = MultinomialNB()\n","etc = ExtraTreesClassifier(n_estimators=50, random_state=2)\n","\n","from sklearn.ensemble import VotingClassifier"],"metadata":{"id":"zawpRf-U8ZVv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["voting = VotingClassifier(estimators=[('svm', svc), ('nb', mnb), ('et', etc)],voting='soft')\n"],"metadata":{"id":"0vOKttSX8ZYq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["voting.fit(X_train,y_train)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":110},"id":"HjO4IoM78g9d","executionInfo":{"status":"ok","timestamp":1707064226339,"user_tz":480,"elapsed":70020,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"ebcfefd8-2668-40a1-e1a6-bfb1b00a2aa4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["VotingClassifier(estimators=[('svm',\n","                              SVC(gamma=1.0, kernel='sigmoid',\n","                                  probability=True)),\n","                             ('nb', MultinomialNB()),\n","                             ('et',\n","                              ExtraTreesClassifier(n_estimators=50,\n","                                                   random_state=2))],\n","                 voting='soft')"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>VotingClassifier(estimators=[(&#x27;svm&#x27;,\n","                              SVC(gamma=1.0, kernel=&#x27;sigmoid&#x27;,\n","                                  probability=True)),\n","                             (&#x27;nb&#x27;, MultinomialNB()),\n","                             (&#x27;et&#x27;,\n","                              ExtraTreesClassifier(n_estimators=50,\n","                                                   random_state=2))],\n","                 voting=&#x27;soft&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">VotingClassifier</label><div class=\"sk-toggleable__content\"><pre>VotingClassifier(estimators=[(&#x27;svm&#x27;,\n","                              SVC(gamma=1.0, kernel=&#x27;sigmoid&#x27;,\n","                                  probability=True)),\n","                             (&#x27;nb&#x27;, MultinomialNB()),\n","                             (&#x27;et&#x27;,\n","                              ExtraTreesClassifier(n_estimators=50,\n","                                                   random_state=2))],\n","                 voting=&#x27;soft&#x27;)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><label>svm</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC(gamma=1.0, kernel=&#x27;sigmoid&#x27;, probability=True)</pre></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><label>nb</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MultinomialNB</label><div class=\"sk-toggleable__content\"><pre>MultinomialNB()</pre></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><label>et</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">ExtraTreesClassifier</label><div class=\"sk-toggleable__content\"><pre>ExtraTreesClassifier(n_estimators=50, random_state=2)</pre></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":436}]},{"cell_type":"code","source":["y_pred = voting.predict(X_test)\n","print(\"Accuracy\",accuracy_score(y_test,y_pred))\n","print(\"Precision\",precision_score(y_test,y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0NHyiC_c8hAW","executionInfo":{"status":"ok","timestamp":1707064232536,"user_tz":480,"elapsed":2214,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"db4cff09-86ae-4c04-d537-025021720a01"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy 0.9815891472868217\n","Precision 1.0\n"]}]},{"cell_type":"code","source":["# Applying stacking\n","estimators=[('svm', svc), ('nb', mnb), ('et', etc)]\n","final_estimator=RandomForestClassifier()"],"metadata":{"id":"2GuXSDif8hb_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.ensemble import StackingClassifier\n","clf = StackingClassifier(estimators=estimators, final_estimator=final_estimator)\n"],"metadata":{"id":"ZHAGPNLT8he0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["clf.fit(X_train,y_train)\n","y_pred = clf.predict(X_test)\n","print(\"Accuracy\",accuracy_score(y_test,y_pred))\n","print(\"Precision\",precision_score(y_test,y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0XS7KHUF8hi0","executionInfo":{"status":"ok","timestamp":1707064537159,"user_tz":480,"elapsed":298954,"user":{"displayName":"Subodh Shah","userId":"04187035146168117481"}},"outputId":"7205198e-4474-4f80-9c13-f1c2f7da11b4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy 0.9844961240310077\n","Precision 0.9911504424778761\n"]}]},{"cell_type":"code","source":["import pickle\n","pickle.dump(tfidf,open('vectorizer.pkl','wb'))\n","pickle.dump(mnb,open('model.pkl','wb'))"],"metadata":{"id":"m8K-CYaP8vK4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"o5Tx8UPI8vOM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"ha22hLLd8vQp"},"execution_count":null,"outputs":[]}]}